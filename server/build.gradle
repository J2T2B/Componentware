plugins {
    id 'ear'
    id 'war'
    id 'java'
}

dependencies {
    // The following dependencies will be the ear modules and
    // will be placed in the ear root
    // deploy project(':war')

    // The following dependencies will become ear libs and will
    // be placed in a dir configured via the libDirName property
    // earlib group: 'log4j', name: 'log4j'
    compile project(':supportgame')
    earlib project(':supportgame')
    compile project(':gamelogic')
    earlib project(':gamelogic')
    compile project(':detectivgame')
    earlib project(':detectivgame')
    //earlib project(':frontend')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    compile group: 'org.jetbrains', name: 'annotations', version: '17.0.0'
    // https://mvnrepository.com/artifact/javax.websocket/javax.websocket-api
    providedCompile group: 'javax.websocket', name: 'javax.websocket-api', version: '1.1'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    earlib group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    // https://mvnrepository.com/artifact/javax.ejb/javax.ejb-api
    compile group: 'javax.ejb', name: 'javax.ejb-api', version: '3.2.2'
    // https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
    compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    compile group: 'javax', name: 'javaee-web-api', version: '8.0.1'
    compile group: 'javax.security.enterprise', name: 'javax.security.enterprise-api', version: '1.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3

    implementation 'org.reflections:reflections:0.9.11'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    testCompile group: 'com.google.guava', name: 'guava', version: '28.2-jre'
    earlib 'org.hibernate:hibernate-core:5.4.10.Final'

}

build.dependsOn "war"

//build.dependsOn "includeFrontend"
/*task includeFrontend{
    from project(":frontend").getBuildDir().toString()
    include "*"
    into "./src/main/java/webapp/"
}*/
